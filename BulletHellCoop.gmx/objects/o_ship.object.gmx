<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_ship</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ship Alarms
alarm[LASER_ALARM] = 1;
laser_powerup = false;

//right click boost
alarm[BOOST_TIMER] = 3;
blink_ability = true;
shield_ability = true;

//set player hp
armor = 4;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ability timers
//reset alarm
blink_ability = true; //this is blink
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///deactivate powerup
laser_powerup = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shoot lasers
//instance_create(x+12,y-8,o_laser);
//instance_create(x-12,y-8,o_laser);
//reset alarm
alarm[LASER_ALARM] = room_speed/6;

//create powerup laser
if (laser_powerup == true) {
    var laser;
    laser = instance_create(x+12, y, o_laser);
    laser.hspeed = .5;
    laser = instance_create(x-12,y, o_laser);
    laser.hspeed = -.5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move ship using kb

leftpress = keyboard_check(vk_left);
rightpress = keyboard_check(vk_right);
uppress = keyboard_check(vk_up);

//move ship
if (uppress) {
    direction = image_angle;
    if (speed &lt; 5) {
        speed += 0.2;   
    }
}
else {
    if (speed &gt; 0) {
            speed -= 0.1;
    }
}

//angle ship
if (leftpress) {
    image_angle = image_angle + 5;
}

if (rightpress) {
    image_angle = image_angle - 5;
}



/*leftpress = keyboard_check(vk_left);
rightpress = keyboard_check(vk_right);
movex = rightpress - leftpress;


x += movex*5;
x = clamp(x, 16,room_width-16);

uppress = keyboard_check(vk_up);
downpress = keyboard_check(vk_down);
//movey = downpress - uppress;
movey = uppress //no throttling back
y += movey*5;

image_angle = point_direction(x,y,mouse_x,mouse_y);
if (mouse_button = mb_left) {
    if (speed &lt; 5) {
        speed += 0.2;
    }
    //check for static mouse
    if (oldx == mouse_x) &amp;&amp; (oldy == mouse_y) {
        direction = direction
    }
    else {
        direction = image_angle;
    }
}
else {
    if (speed &gt; 0) {
            speed -= 0.1;
    }
}

//assign values to the old
oldx = mouse_x;
oldy = mouse_y;
*/

//abilities
if (keyboard_check(ord("A"))) &amp;&amp; (blink_ability == true) {

    //blink direction stuff
    var dist = 100;
    x += cos(degtorad(image_angle))*dist;
    y -= sin(degtorad(image_angle))*dist;
    blink_ability = false;
    alarm[BLINK_UPDATE] = room_speed / 5;
    alarm[BOOST_TIMER] = room_speed * 5;
}

if (keyboard_check(ord("Z"))) &amp;&amp; (boost_ability == true) {

//check if player hits boundaries
x = clamp(x, 16,room_width-16);
y = clamp(y, 16, room_height-16);




//die code
if (armor &lt;= 0) {
    create_explosion(x,y);
    instance_destroy();
    instance_create(room_width/2, room_height/2, o_restart_button);
   
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_laser_powerup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collect laser powerup
 laser_powerup = true;
 alarm[LASER_POWERUP] = room_speed * 5;
 with (other) {
    instance_destroy();
 }
 
 audio_play_sound(a_powerup,4, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_armour_powerup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///add armour
armor += 1;
armor = min(armor,4);

with (other) {
    instance_destroy();
}

audio_play_sound(a_powerup,4, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
