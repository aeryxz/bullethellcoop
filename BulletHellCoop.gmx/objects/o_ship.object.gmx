<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_ship</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ship Alarms
alarm[LASER_ALARM] = 1;
laser_powerup = false;

//right click boost
blink_ability = true;
shield_ability = true;

//set player hp
armor = 4;

gunnerShotKey = "A";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BLINK RESET
//reset alarm
audio_play_sound(a_ability_ready, 5, false);
blink_ability = true; //this is blink
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SHIELD ABILITY RESET
shield_ability = true;
audio_play_sound(a_ability_ready, 5, false);
//reset oship sprite
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///deactivate powerup
laser_powerup = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shoot star lasers
//instance_create(x+12,y-8,o_laser);
//instance_create(x-12,y-8,o_laser);
//reset alarm
alarm[LASER_ALARM] = room_speed/2;

//create powerup laser
if (laser_powerup == true) {
    var laser;
    var angle_laser;
    var i;
    for (   i=0; i&lt;=7; i+=1) {
        angle_laser[i] = i*45;
        laser = instance_create(x, y, o_laser);
        laser.direction = angle_laser[i];
        laser.speed = 6;
    }
       
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move ship using kb and abilities

leftpress = keyboard_check(vk_left);
rightpress = keyboard_check(vk_right);
uppress = keyboard_check(vk_up);

//move ship
if (uppress) {
    direction = image_angle;
    if (speed &lt; 5) {
        speed += 0.2;   
    }
}
else {
    if (speed &gt; 0) {
            speed -= 0.15;
    }
}

//angle ship
if (leftpress) {
    image_angle = image_angle + 5;
}

if (rightpress) {
    image_angle = image_angle - 5;
}

//parallaxx
background_vspeed[0] = sin(degtorad(o_ship.image_angle))*1;
background_hspeed[0] = -cos(degtorad(o_ship.image_angle))*1;
background_vspeed[1] = sin(degtorad(o_ship.image_angle))*2
background_hspeed[1] = -cos(degtorad(o_ship.image_angle))*2;

/*leftpress = keyboard_check(vk_left);
rightpress = keyboard_check(vk_right);
movex = rightpress - leftpress;


x += movex*5;
x = clamp(x, 16,room_width-16);

uppress = keyboard_check(vk_up);
downpress = keyboard_check(vk_down);
//movey = downpress - uppress;
movey = uppress //no throttling back
y += movey*5;

image_angle = point_direction(x,y,mouse_x,mouse_y);
if (mouse_button = mb_left) {
    if (speed &lt; 5) {
        speed += 0.2;
    }
    //check for static mouse
    if (oldx == mouse_x) &amp;&amp; (oldy == mouse_y) {
        direction = direction
    }
    else {
        direction = image_angle;
    }
}
else {
    if (speed &gt; 0) {
            speed -= 0.1;
    }
}

//assign values to the old
oldx = mouse_x;
oldy = mouse_y;
*/

//abilities
if (keyboard_check(ord("A"))) &amp;&amp; (blink_ability == true) {
    //show last blink loca
    instance_create(x,y,o_ship_blink_last_location);
    o_ship_blink_last_location.image_angle = image_angle;
    audio_play_sound(a_blink, 5, false);

    //blink direction stuff
    blink_dist = 100;
    x += cos(degtorad(image_angle))*blink_dist;
    y -= sin(degtorad(image_angle))*blink_dist;
    
    blink_ability = false;
    alarm[BLINK_UPDATE] = room_speed * 5;
}

if (keyboard_check(ord("Z"))) &amp;&amp; (shield_ability == true) {
   audio_play_sound(a_shieldup, 9, false);

    //draw shield
    var inst;
    inst = instance_create(o_ship.x, o_ship.y, o_ship_shield);
    with (inst)
    {
        image_angle = o_ship.image_angle;
    }
    shield_ability = false;
    alarm[SHIELD_UPDATE] = room_speed * 5;
}


//check if player hits boundaries
x = clamp(x, 16,room_width-16);
y = clamp(y, 16, room_height-16);

//die code and show buttons
if (armor &lt;= 0) {
    create_explosion(x,y);
    instance_destroy();
    instance_create(room_width/2, room_height/2, o_restart_button);
    instance_create(room_width/2, room_height-100, o_gobackmenu_btn);
   
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_laser_powerup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collect laser powerup
 laser_powerup = true;
 alarm[LASER_POWERUP] = room_speed * 5;
 with (other) {
    instance_destroy();
 }
 
 audio_play_sound(a_powerup,4, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_armour_powerup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///add armour
armor += 1;
armor = min(armor,4);

with (other) {
    instance_destroy();
}

audio_play_sound(a_powerup,4, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shooting towards enemy

gunnerPressKey = chr(keyboard_lastkey);
//check objects around me, then compare it to gunner shot

if (instance_exists(o_enemyone)) {
    var i;
    for (i = 0; i &lt; instance_number(o_enemyone); i += 1) {
       tempEnemyOne = instance_find(o_enemyone,i);
       tempX = tempEnemyOne.x;
       tempY = tempEnemyOne.y;
       if (tempEnemyOne.gunnerKey == gunnerPressKey) {
         //create the laser and aim it towards the enemy
         tempLaser = instance_create(x,y,o_laser);
         with (tempLaser) {
            move_towards_point(o_ship.tempX, o_ship.tempY, 8);
         }
       }
    }
}

if (instance_exists(o_enemytwo)) {
    var i;
    for (i = 0; i &lt; instance_number(o_enemytwo); i += 1) {
       tempEnemyOne = instance_find(o_enemytwo,i);
       tempX = tempEnemyOne.x;
       tempY = tempEnemyOne.y;
       if (tempEnemyOne.gunnerKey == gunnerPressKey) {
         //create the laser and aim it towards the enemy
         tempLaser = instance_create(x,y,o_laser);
         with (tempLaser) {
            move_towards_point(o_ship.tempX, o_ship.tempY, 8);
         }
       }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
